
@using Blazor.Extensions;
@using Blazor.Extensions.Canvas;
@using Blazor.Extensions.Canvas.Canvas2D

<div>
    <BECanvas Width="300" Height="400" @ref="_canvasReference"></BECanvas>
</div>

@code{
    private Canvas2DContext _context;

    protected BECanvasComponent _canvasReference;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        this._context = await this._canvasReference.CreateCanvas2DAsync();
        await this._context.SetFillStyleAsync("blue");
        

        bool[][] board = new[]
        {
            new[] { true, false, false },
            new[] { false, true, false },
            new[] { true, false, false },
        };

        for (var y = 0; y < board.Length; y++)
        {
            var column = board[y];
            for (var x = 0; x < column.Length; x++)
            {
                await this._context.SetFillStyleAsync("blue");
                
                var cellSize = 10;
                var cellIsAlive = column[x];
                if (cellIsAlive)
                {
                    await this._context.SetFillStyleAsync("red");
                }
                await this._context.FillRectAsync(x*cellSize, y*cellSize, cellSize, cellSize);
            }
        }


        await this._context.SetFontAsync("38px Calibri");
        await this._context.StrokeTextAsync("Hello Blazor!!!", 5, 100);
    }
}